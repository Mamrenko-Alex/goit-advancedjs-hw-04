{"version":3,"file":"commonHelpers.js","sources":["../src/js/settings.js","../src/js/paxabay-api.js","../src/main.js"],"sourcesContent":["import Notiflix from 'https://cdn.jsdelivr.net/npm/notiflix@3/+esm';\nexport {message, KEY, PERPAGE}\n \nconst message = {\n    success(message) {\n        Notiflix.Notify.success(message);\n    },\n    error(message) {\n        Notiflix.Notify.failure(message);\n    },\n    info(message) {\n      Notiflix.Notify.info(message)\n  }\n}\n\nconst KEY = '40858568-c2cbea82fefa532e5a07e25a9'\n\nconst PERPAGE = 40;","import axios from \"axios\";\nimport { message, KEY } from \"./settings\";\nexport { getImages };\n    \n\nasync function getImages({querry, safesearch, page, perPage}) {\n    try {\n        const response = await axios.get(`https://pixabay.com/api/?key=${KEY}&q=${querry}&image_type=photo&orientation=horizontal&safesearch=${safesearch}&page=${page}&per_page=${perPage}`)\n        return response.data\n    } catch (error) {\n        message.error('No response from the server, try again later');\n    }\n}\n","import { getImages } from \"./js/paxabay-api\";\nimport { message, PERPAGE } from \"./js/settings\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\nimport _ from 'lodash';\n\nlet gallery;\nlet page = 1;\nlet currentQuerry = '';\nlet isLoading = false;\nlet scrollHandler\n\nconst searchForm = document.querySelector('.search-form');\n\nconst elements = {\n    body: document.body,\n    searchField: searchForm.elements.searchQuery,\n    safeSearchField: searchForm.elements.safesearch, \n    gallery: document.querySelector('.gallery')\n}\n\nfunction createGallery(galleryItems) {\n    const markup = galleryItems.map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n    }) => {\n        return `\n        <div class=\"photo-card\">\n            <a href=\"${largeImageURL}\" class=\"gallery__link\">\n                <img class=\"photo-img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            </a>\n            <div class=\"info\">\n                <p class=\"info-item\">\n                    <b>Likes</b><span class=\"js-data\">${likes}</span>\n                </p>\n                <p class=\"info-item\">\n                    <b>Views</b><span class=\"js-data\">${views}</span>\n                </p>\n                <p class=\"info-item\">\n                    <b>Comments</b><span class=\"js-data\">${comments}</span>\n                </p>\n                <p class=\"info-item\">\n                    <b>Downloads</b><span class=\"js-data\">${downloads}</span>\n                </p>\n            </div>\n        </div>`\n    })\n    return markup.join('')\n}\n\n\nsearchForm.addEventListener('submit', submitHandler)\n\n\nasync function submitHandler(event) {\n    event.preventDefault()\n    window.removeEventListener(\"scroll\", scrollHandler);\n    page = 1;\n\n    const queryParams = {\n        querry: elements.searchField.value.trim().toLowerCase(),\n        safesearch: elements.safeSearchField.checked,\n        perPage: PERPAGE,\n        page,\n    }\n\n    if (queryParams.querry === '') {\n        message.info('The search field must not be empty');\n        return\n    } else if (queryParams.querry === currentQuerry) {\n        message.info('Looks like you were just looking for this.')\n        return\n    }\n    \n    currentQuerry = queryParams.querry\n\n    try {\n        const data = await getImages(queryParams)\n        if (data.total === 0) {\n            elements.gallery.innerHTML = '';\n            message.info('Sorry, there are no images matching your search query. Please try again.');\n            return\n        }\n\n        window.scrollTo(0, 0);\n        message.success(`Hooray! We found ${data.totalHits} images.`)\n        elements.gallery.innerHTML = createGallery(data.hits)\n\n        gallery = new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionDelay: 250,\n        });\n        gallery.refresh()\n        elements.searchField.value = ''\n\n        scrollHandler = _.throttle(handlerInfinityScrol, 500);\n        console.log(data.totalHits > PERPAGE);\n        if (data.totalHits > PERPAGE) {\n            window.addEventListener(\"scroll\", scrollHandler);\n        }\n    } catch (error) {\n        message.error(error)\n    }\n}\n\n\ndocument.querySelectorAll('a[href^=\"#\"').forEach(link => {\n\n    link.addEventListener('click', function(e) {\n        e.preventDefault();\n\n        let href = this.getAttribute('href').substring(1);\n\n        const scrollTarget = document.getElementById(href);\n\n        const topOffset = 0; // если не нужен отступ сверху \n        const elementPosition = scrollTarget.getBoundingClientRect().top;\n        const offsetPosition = elementPosition - topOffset;\n\n        window.scrollBy({\n            top: offsetPosition,\n            behavior: 'smooth'\n        });\n    });\n});\n\nasync function handlerInfinityScrol() {\n    const windowHeight = window.innerHeight;\n    const documentHeight = document.documentElement.scrollHeight;\n    const scrollPosition = window.scrollY;\n\n    if (documentHeight - (windowHeight + scrollPosition) >= 80) {\n        return\n    }\n    isLoading = true;\n    page += 1;\n\n    const queryParams = {\n        querry: currentQuerry,\n        safesearch: elements.safeSearchField.checked,\n        perPage: PERPAGE,\n        page,\n    }\n\n    try {\n        const data = await getImages(queryParams)\n        elements.gallery.innerHTML += createGallery(data.hits)\n        gallery.refresh();\n        const totalPages = Math.ceil(data.totalHits / PERPAGE);\n\n        if (page >= totalPages) {\n            window.removeEventListener(\"scroll\", scrollHandler);\n            message.info('Sorry, you have viewed all available images.')\n        }\n    } catch (error) {\n        console.log(error);\n        message.error('somthing is wrong')\n    } finally {\n        isLoading = false;\n    }\n}"],"names":["message","Notiflix","KEY","PERPAGE","getImages","querry","safesearch","page","perPage","axios","gallery","currentQuerry","scrollHandler","searchForm","elements","createGallery","galleryItems","webformatURL","largeImageURL","tags","likes","views","comments","downloads","submitHandler","event","queryParams","data","SimpleLightbox","_","handlerInfinityScrol","error","link","e","href","scrollTarget","topOffset","offsetPosition","windowHeight","documentHeight","scrollPosition","totalPages"],"mappings":"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"}